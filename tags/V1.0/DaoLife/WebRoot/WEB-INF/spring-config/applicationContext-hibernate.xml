<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
<bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <list>
            <value>WEB-INF/mail.properties</value>
            <value>WEB-INF/jdbc.properties</value>
            <!--  <value>WEB-INF/oscache.properties</value>-->
        </list>
    </property>
</bean>
<!-- MailSender used by EmailAdvice -->
<!--
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${mail.host}"/>
    </bean>

<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close" dependency-check="none">
    <property name="driverClass">
        <value>${datasource.driverClassName}</value>
    </property>
    <property name="jdbcUrl">
        <value>${datasource.url}</value>
    </property>
    <property name="user">
        <value>${datasource.username}</value>
    </property>
    <property name="password">
        <value>${datasource.password}</value>
    </property>
    <property name="automaticTestTable">  
  		<value>${c3p0.automaticTestTable}</value>  
    </property>
    <property name="testConnectionOnCheckin">  
  		<value>${datasource.testOnBorrow}</value>  
    </property>
     <property name="testConnectionOnCheckout">
        <value>${datasource.testOnReturn}</value>
    </property>
    <property name="acquireIncrement">
        <value>${c3p0.acquireIncrement}</value>
    </property>
    <property name="acquireRetryAttempts">
        <value>${c3p0.acquireRetryAttempts}</value>
    </property>
    <property name="acquireRetryDelay">
        <value>${c3p0.acquireRetryDelay}</value>
    </property>
    <property name="initialPoolSize">
        <value>${c3p0.initialPoolSize}</value>
    </property>
    <property name="minPoolSize">
        <value>${c3p0.minPoolSize}</value>
    </property>
    <property name="maxPoolSize">
        <value>${c3p0.maxPoolSize}</value>
    </property>
    <property name="maxIdleTime">
        <value>${c3p0.maxIdleTime}</value>
    </property>
    <property name="idleConnectionTestPeriod">
        <value>${c3p0.idleConnectionTestPeriod}</value>
    </property>
    <property name="maxStatements">
        <value>${c3p0.maxStatements}</value>
    </property>
    <property name="numHelperThreads">
        <value>${c3p0.numHelperThreads}</value>
    </property>
</bean>
-->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   
    <property name="driverClassName">   
        <value>${datasource.driverClassName}</value>   
    </property>   
    <property name="url">              
        <value>${datasource.url}</value>   
     </property>   
    <property name="username">   
        <value>${datasource.username}</value>   
    </property>   
    <property name="password">   
        <value>${datasource.password}</value>   
    </property>
    <property name="maxActive">
    	<value>${datasource.maxActive}</value>
    </property>
  	<property name="maxIdle">
  		<value>${datasource.maxIdle}</value>
  	</property>
  	<property name="maxWait">
  		<value>${datasource.maxWait}</value>
  	</property>
  	<property name="validationQuery">
  		<value>${datasource.validationQuery}</value>
  	</property>
  	 <property name="testWhileIdle">
  		<value>${datasource.testWhileIdle}</value>
  	</property>   
  	<property name="timeBetweenEvictionRunsMillis">
  		<value>${datasource.timeBetweenEvictionRunsMillis}</value>
  	</property>
  	<property name="minEvictableIdleTimeMillis">
  		<value>${datasource.minEvictableIdleTimeMillis}</value>
  	</property> 
  	<property name="testOnBorrow">
  		<value>${datasource.testOnBorrow}</value>
  	</property>
</bean>
<bean id="sessionFactory"
    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource">
        <ref local="dataSource" />
    </property>
    <property name="mappingLocations">
			<value>classpath*:com/innovation/daolife/model/*.hbm.xml</value>
	</property>
    <property name="hibernateProperties">
        <props>
            <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            <prop key="hibernate.jdbc.fetch_size">
                ${hibernate.jdbc.fetch_size}
            </prop>
            <prop key="hibernate.jdbc.batch_size">
                ${hibernate.jdbc.batch_size}
            </prop>
        </props>
    </property>
    <!-- <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
  	<property name="configLocation" value="/WEB-INF/hibernate.cfg.xml"/> -->
</bean>
<!-- 配置事务管理器bean,使用HibernateTransactionManager事务管理器 -->
<bean id="transactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <!-- 为事务管理器注入sessionFactory" -->
        <property name="sessionFactory" ref="sessionFactory"/>
</bean>
<!-- 配置事务拦截器Bean -->
<bean id="transactionInterceptor"
    class="org.springframework.transaction.interceptor.TransactionInterceptor">
    <!-- 为事务拦截器bean注入一个事物管理器 -->
    <property name="transactionManager" ref="transactionManager"></property>
    <property name="transactionAttributes">
    <!-- 定义事务传播属性 -->
        <props>
                <prop key="regist*">PROPAGATION_REQUIRED</prop>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="change*">PROPAGATION_REQUIRED</prop>
                <prop key="reset*">PROPAGATION_REQUIRED</prop>
                <prop key="covert*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
        </props>
    </property>
</bean>
<!-- 定义BeanNameAutoProxyCreator -->
<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <!-- 指定满足哪些bean自动生成业务代理 -->
    <property name="beanNames">
    <!-- 需要自动创建事务代理的bean -->
        <list>
            <value>userService</value>
            <value>followrelationService</value>
            <value>dlDaoService</value>
            <value>productService</value>
           	<value>dlMessagesService</value>
            <value>dlAreaService</value>
            <value>dlCommentService</value>
           	<value>daoContentBodyConvert</value>
           	<value>retwitteUtil</value>
        </list>
        <!-- 其它需要自动创建事务代理的bean -->
    </property>
    <property name="interceptorNames">
        <list>
            <!-- 可增加其它的interceptor -->
            <value>methodCachePointCut</value>   
          	<value>transactionInterceptor</value>
          	<value>methodCachePointCutAdvice</value> 
        </list>
    </property>
</bean>
</beans>


